<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.haoze.dao.system.EmrRoleDao">

    <resultMap id="BaseResultMap" type="com.haoze.model.system.role.entity.EmrRoleEntity" >

        <result column="PK_ROLE" property="ID" jdbcType="VARCHAR" />
        <result column="PK_ORG" property="roleOrganization" jdbcType="VARCHAR" />
        <result column="CODE_ROLE" property="roleCode" jdbcType="VARCHAR" />
        <result column="NAME_ROLE" property="roleName" jdbcType="VARCHAR" />
        <result column="NOTE" property="note" jdbcType="VARCHAR" />
        <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
        <result column="CREATE_TIME" property="createTime" jdbcType="DATE" />
        <result column="MODIFIER" property="modifier" jdbcType="VARCHAR" />
        <result column="MODIFY_TIME" property="modifyTime" jdbcType="DATE" />
        <result column="DEL_FLAG" property="delFlag" jdbcType="VARCHAR" />
        <result column="DATA_VERSION" property="dataVersion" jdbcType="NUMERIC" />
        <result column="PY_CODE" property="pyCode" jdbcType="VARCHAR" />
        <result column="WB_CODE" property="wbCode" jdbcType="VARCHAR" />

    </resultMap>

    <sql id="Base_Column_List">
        PK_ROLE,PK_ORG,CODE_ROLE,NAME_ROLE,NOTE,CREATOR,CREATE_TIME,MODIFIER,MODIFY_TIME,DEL_FLAG,DATA_VERSION,PY_CODE,WB_CODE
    </sql>

    <select id="get" resultMap="BaseResultMap">
        SELECT
          <include refid="Base_Column_List"/>
        FROM SYS_ROLE where PK_ROLE = #{roleId}
    </select>

    <select id="listRoles" resultMap="BaseResultMap">
        SELECT
          <include refid="Base_Column_List"/>
        FROM SYS_ROLE
    </select>

    <select id="count" resultType="int">
        select count(*) from sys_role
        <where>
            <if test="roleId != null and roleId != ''"> and role_id = #{roleId} </if>
            <if test="roleName != null and roleName != ''"> and role_name = #{roleName} </if>
            <if test="roleSign != null and roleSign != ''"> and role_sign = #{roleSign} </if>
            <if test="remark != null and remark != ''"> and remark = #{remark} </if>
            <if test="userIdCreate != null and userIdCreate != ''"> and user_id_create = #{userIdCreate} </if>
            <if test="gmtCreate != null and gmtCreate != ''"> and gmt_create = #{gmtCreate} </if>
            <if test="gmtModified != null and gmtModified != ''"> and gmt_modified = #{gmtModified} </if>
        </where>
    </select>

    <insert id="save" parameterType="com.haoze.model.system.role.entity.EmrRoleEntity">
        INSERT INTO SYS_ROLE(PK_ROLE,PK_ORG,CODE_ROLE,NAME_ROLE,NOTE,CREATOR,CREATE_TIME,MODIFIER,MODIFY_TIME,DEL_FLAG,DATA_VERSION,PY_CODE,WB_CODE)
        VALUES(#{ID,jdbcType=VARCHAR},#{roleOrganization,jdbcType=VARCHAR},#{roleCode,jdbcType=VARCHAR},#{roleName,jdbcType=VARCHAR},#{note,jdbcType=VARCHAR},
        #{creator,jdbcType=VARCHAR},#{createTime,jdbcType=DATE},#{modifier,jdbcType=VARCHAR},#{modifyTime,jdbcType=DATE},#{delFlag,jdbcType=VARCHAR},
        #{dataVersion,jdbcType=NUMERIC},#{pyCode,jdbcType=VARCHAR}ï¼Œ#{wbCode,jdbcType=VARCHAR})
    </insert>

    <update id="update" parameterType="com.haoze.model.system.role.entity.EmrRoleEntity">
        update SYS_ROLE
        <set>
            <if test="roleCode != null">CODE_ROLE = #{roleCode,jdbcType=VARCHAR}, </if>
            <if test="roleName != null">NAME_ROLE = #{roleName,jdbcType=VARCHAR}, </if>
            <if test="note != null">NOTE = #{note,jdbcType=VARCHAR}, </if>
            <if test="dataVersion != null">DATA_VERSION = #{dataVersion,jdbcType=NUMERIC}, </if>
            <if test="pyCode != null">PY_CODE = #{pyCode,jdbcType=VARCHAR}, </if>
            <if test="wbCode != null">WB_CODE = #{wbCode,jdbcType=VARCHAR}</if>

            <if test="modifier != null">MODIFIER = #{modifier,jdbcType=VARCHAR}, </if>
            <if test="modifyTime != null">MODIFY_TIME = #{modifyTime,jdbcType=DATE}, </if>
            <if test="delFlag != null">DEL_FLAG = #{delFlag,jdbcType=VARCHAR}</if>
        </set>
        where PK_ROLE = #{ID,jdbcType=VARCHAR}
    </update>

    <delete id="remove" parameterType="String">
        delete from SYS_ROLE where PK_ROLE = #{_parameter}
    </delete>

    <delete id="batchRemove">
        delete from sys_role where role_id in
        <foreach item="roleId" collection="array" open="(" separator=","
                 close=")">
            #{roleId}
        </foreach>
    </delete>

</mapper>