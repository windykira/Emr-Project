package com.haoze.controller.kb;

import com.haoze.common.annotation.Note;
import com.haoze.common.model.QueryParam;
import com.haoze.common.model.ResponseResult;
import com.haoze.model.repository.entity.DataElementEntity;
import com.haoze.model.repository.entity.DataElementValuesEntity;
import com.haoze.model.repository.vo.DataDictionaryVO;
import com.haoze.model.system.role.entity.EmrRoleEntity;
import com.haoze.service.repository.DataElementService;
import com.haoze.service.repository.DataElementValuesService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;

/**
 * 数据元值域控制器信息。
 * @author maxl
 * @time 2018-07-18。
 */
@RequestMapping("repository/dataelementvalues")
@Controller
public class DataElementValuesController {

    @Autowired
    DataElementValuesService dataElementValuesService;

    private String prefix = "repository/dictionary/dataelementvalues";


    @GetMapping("/list/{dataElementId}")
    @ResponseBody
    List<DataElementValuesEntity> list(@PathVariable("dataElementId") String dataElementId) {
        QueryParam queryParam = QueryParam.getDefaultQueryParam();
        queryParam.put("dataElementId",dataElementId);
        List<DataElementValuesEntity> elementValues = dataElementValuesService.list(queryParam);
        return elementValues;
    }

    @Note("新增数据元值域")
    //@RequiresPermissions("repository:dataGroup:add")
    @GetMapping("/add")
    String add() {

        return prefix + "/add";
    }

    @Note("新增数据元值域")
    //@RequiresPermissions("repository:dataGroup:add")
    @PostMapping("/save")
    @ResponseBody
    ResponseResult save(DataElementValuesEntity dataElementValuesEntity) {
        return dataElementValuesService.insert(dataElementValuesEntity);
    }

    @PostMapping("/delete")
    @ResponseBody
    ResponseResult delete(String dataElementValuesId) {
        return dataElementValuesService.delete(dataElementValuesId);
    }

    @PostMapping("/exist")
    @ResponseBody
    boolean exist(@RequestParam Map<String, Object> params) {
        int count = dataElementValuesService.count(new QueryParam(params));
        return count == 0;
    }
}
