<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="com.haoze.dao.repository.DataElementValuesDao" >

  <resultMap id="BaseResultMap" type="com.haoze.model.repository.entity.DataElementValuesEntity" >
    <id column="PK_DATA_ELE_VAL" property="pkDataEleVal" jdbcType="VARCHAR" />
    <result column="PK_ORG" property="pkOrg" jdbcType="VARCHAR" />
    <result column="CODE_DE_VAL" property="codeDeVal" jdbcType="VARCHAR" />
    <result column="NAME_DE_VAL" property="nameDeVal" jdbcType="VARCHAR" />
    <result column="PY_CODE" property="pyCode" jdbcType="VARCHAR" />
    <result column="WB_CODE" property="wbCode" jdbcType="VARCHAR" />
    <result column="DESCRIBE" property="describe" jdbcType="VARCHAR" />
    <result column="DEL_FLAG" property="delFlag" jdbcType="VARCHAR" />
    <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="DATE" />
    <result column="MODIFIER" property="modifier" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="DATE" />
    <result column="PK_DATA_ELEMT" property="pkDataElemt" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    PK_DATA_ELE_VAL, PK_ORG, CODE_DE_VAL, NAME_DE_VAL, PY_CODE, WB_CODE, DESCRIBE, DEL_FLAG, 
    CREATOR, CREATE_TIME, MODIFIER, MODIFY_TIME, PK_DATA_ELEMT
  </sql>

  <select id="get" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from BD_DATA_ELEMENT_VALS
    where PK_DATA_ELE_VAL = #{_parameter}
  </select>
  
  <delete id="deleteByDataElementId" parameterType="java.lang.String">
      delete from BD_DATA_ELEMENT_VALS
    <where>
      <if test="_parameter != null and _parameter != ''"> and PK_DATA_ELEMT = #{_parameter} </if>
    </where>
  </delete>
  
  <delete id="delete" parameterType="java.lang.String" >
    delete from BD_DATA_ELEMENT_VALS
    where PK_DATA_ELE_VAL = #{_parameter}
  </delete>
  
  <delete id="batchDelete" parameterType="java.lang.String">
    delete from BD_DATA_ELEMENT_VALS where PK_DATA_ELE_VAL in
    <foreach item="ids" collection="array" open="(" separator="," close=")">
      #{ids}
    </foreach>
  </delete>

  <select id="count" resultType="int" parameterType="java.util.Map">
    select count(*) from BD_DATA_ELEMENT_VALS
    <where>
      <if test="queryParam != null and queryParam != ''">
        and (CODE_DE_VAL like concat(concat('%',#{queryParam}),'%') or NAME_DE_VAL like concat(concat('%',#{queryParam}),'%')
        PY_CODE like concat(concat('%',#{queryParam}),'%') or WB_CODE like concat(concat('%',#{queryParam}),'%'))
      </if>
      <if test="codeDeVal != null and codeDeVal != ''"> and CODE_DE_VAL = #{codeDeVal} </if>
      <if test="nameDeVal != null and nameDeVal != ''"> and NAME_DE_VAL = #{nameDeVal} </if>
    </where>
  </select>

  <select id="list" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from BD_DATA_ELEMENT_VALS
    <where>
      <if test="queryParam != null and queryParam != ''">
        and (CODE_DE_VAL like concat(concat('%',#{queryParam}),'%') or NAME_DE_VAL like concat(concat('%',#{queryParam}),'%')
        PY_CODE like concat(concat('%',#{queryParam}),'%') or WB_CODE like concat(concat('%',#{queryParam}),'%'))
      </if>
      <if test="dataElementId != null and dataElementId != ''"> and PK_DATA_ELEMT = #{dataElementId} </if>
      <if test="delFlag != null and delFlag != ''"> and DEL_FLAG = #{delFlag} </if>
    </where>
  </select>

  <insert id="insert" parameterType="com.haoze.model.repository.entity.DataElementValuesEntity" >
    insert into BD_DATA_ELEMENT_VALS (PK_DATA_ELE_VAL, PK_ORG, CODE_DE_VAL, 
      NAME_DE_VAL, PY_CODE, WB_CODE, 
      DESCRIBE, DEL_FLAG, CREATOR, 
      CREATE_TIME, MODIFIER, MODIFY_TIME, 
      PK_DATA_ELEMT)
    values (#{pkDataEleVal,jdbcType=VARCHAR}, #{pkOrg,jdbcType=VARCHAR}, #{codeDeVal,jdbcType=VARCHAR}, 
      #{nameDeVal,jdbcType=VARCHAR}, #{pyCode,jdbcType=VARCHAR}, #{wbCode,jdbcType=VARCHAR}, 
      #{describe,jdbcType=VARCHAR}, #{delFlag,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=DATE}, #{modifier,jdbcType=VARCHAR}, #{modifyTime,jdbcType=DATE}, 
      #{pkDataElemt,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.haoze.model.repository.entity.DataElementValuesEntity" >
    insert into BD_DATA_ELEMENT_VALS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pkDataEleVal != null" >
        PK_DATA_ELE_VAL,
      </if>
      <if test="pkOrg != null" >
        PK_ORG,
      </if>
      <if test="codeDeVal != null" >
        CODE_DE_VAL,
      </if>
      <if test="nameDeVal != null" >
        NAME_DE_VAL,
      </if>
      <if test="pyCode != null" >
        PY_CODE,
      </if>
      <if test="wbCode != null" >
        WB_CODE,
      </if>
      <if test="describe != null" >
        DESCRIBE,
      </if>
      <if test="delFlag != null" >
        DEL_FLAG,
      </if>
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="modifier != null" >
        MODIFIER,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="pkDataElemt != null" >
        PK_DATA_ELEMT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pkDataEleVal != null" >
        #{pkDataEleVal,jdbcType=VARCHAR},
      </if>
      <if test="pkOrg != null" >
        #{pkOrg,jdbcType=VARCHAR},
      </if>
      <if test="codeDeVal != null" >
        #{codeDeVal,jdbcType=VARCHAR},
      </if>
      <if test="nameDeVal != null" >
        #{nameDeVal,jdbcType=VARCHAR},
      </if>
      <if test="pyCode != null" >
        #{pyCode,jdbcType=VARCHAR},
      </if>
      <if test="wbCode != null" >
        #{wbCode,jdbcType=VARCHAR},
      </if>
      <if test="describe != null" >
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=DATE},
      </if>
      <if test="pkDataElemt != null" >
        #{pkDataElemt,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.haoze.model.repository.entity.DataElementValuesEntity" >
    update BD_DATA_ELEMENT_VALS
    <set >
      <if test="pkOrg != null" >
        PK_ORG = #{pkOrg,jdbcType=VARCHAR},
      </if>
      <if test="codeDeVal != null" >
        CODE_DE_VAL = #{codeDeVal,jdbcType=VARCHAR},
      </if>
      <if test="nameDeVal != null" >
        NAME_DE_VAL = #{nameDeVal,jdbcType=VARCHAR},
      </if>
      <if test="pyCode != null" >
        PY_CODE = #{pyCode,jdbcType=VARCHAR},
      </if>
      <if test="wbCode != null" >
        WB_CODE = #{wbCode,jdbcType=VARCHAR},
      </if>
      <if test="describe != null" >
        DESCRIBE = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        DEL_FLAG = #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        CREATOR = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=DATE},
      </if>
      <if test="modifier != null" >
        MODIFIER = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=DATE},
      </if>
      <if test="pkDataElemt != null" >
        PK_DATA_ELEMT = #{pkDataElemt,jdbcType=VARCHAR},
      </if>
    </set>
    where PK_DATA_ELE_VAL = #{pkDataEleVal,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.haoze.model.repository.entity.DataElementValuesEntity" >
    update BD_DATA_ELEMENT_VALS
    set PK_ORG = #{pkOrg,jdbcType=VARCHAR},
      CODE_DE_VAL = #{codeDeVal,jdbcType=VARCHAR},
      NAME_DE_VAL = #{nameDeVal,jdbcType=VARCHAR},
      PY_CODE = #{pyCode,jdbcType=VARCHAR},
      WB_CODE = #{wbCode,jdbcType=VARCHAR},
      DESCRIBE = #{describe,jdbcType=VARCHAR},
      DEL_FLAG = #{delFlag,jdbcType=VARCHAR},
      CREATOR = #{creator,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      MODIFIER = #{modifier,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=DATE},
      PK_DATA_ELEMT = #{pkDataElemt,jdbcType=VARCHAR}
    where PK_DATA_ELE_VAL = #{pkDataEleVal,jdbcType=VARCHAR}
  </update>
</mapper>