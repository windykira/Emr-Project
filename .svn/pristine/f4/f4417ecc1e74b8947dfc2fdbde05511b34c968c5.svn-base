<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.haoze.dao.system.EmrDepartmentDao">

    <resultMap id="BaseResultMap" type="com.haoze.model.system.department.entity.EmrDepartmentEntity" >
        <result column="PK_DEPT" property="ID" jdbcType="VARCHAR" />
        <result column="PK_ORG" property="organizationID" jdbcType="VARCHAR" />
        <result column="CODE_DEPT" property="departmentCode" jdbcType="VARCHAR" />
        <result column="NAME_DEPT" property="departmentName" jdbcType="VARCHAR" />
        <result column="PK_FATHER" property="parentDepartmentID" jdbcType="VARCHAR" />
        <result column="LVL_DEPT" property="departmentLevel" jdbcType="VARCHAR" />
        <result column="DEPT_TYPE" property="departmentType" jdbcType="VARCHAR" />
        <result column="SHORTNAME" property="abbreviationName" jdbcType="DATE" />
        <result column="PY_CODE" property="pyCode" jdbcType="VARCHAR" />

        <result column="WB_CODE" property="wbCode" jdbcType="VARCHAR" />
        <result column="DEPT_DESC" property="description" jdbcType="VARCHAR" />
        <result column="NOTE" property="note" jdbcType="VARCHAR" />
        <result column="TELNO_DEPT" property="departmentPhone" jdbcType="VARCHAR" />
        <result column="DEL_FLAG" property="delFlag" jdbcType="DATE" />
        <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
        <result column="CREATE_TIME" property="createTime" jdbcType="DATE" />
        <result column="MODIFIER" property="modifier" jdbcType="VARCHAR" />
        <result column="MODIFY_TIME" property="modifyTime" jdbcType="DATE" />
        <result column="DATA_VERSION" property="dataVersion" jdbcType="VARCHAR" />
        <result column="MT_TYPE" property="mtType" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List">
        PK_DEPT,PK_ORG,CODE_DEPT,NAME_DEPT,PK_FATHER,LVL_DEPT,DEPT_TYPE,SHORTNAME,PY_CODE,WB_CODE,DEPT_DESC,NOTE,TELNO_DEPT,
        DEL_FLAG,CREATOR,CREATE_TIME,MODIFIER,MODIFY_TIME,DATA_VERSION,MT_TYPE
    </sql>

    <select id="count" resultType="int">
        SELECT
        COUNT(1)
        FROM SYS_DEPT
        <where>
            <if test="name != null and name!= ''"> AND NAME_DEPT = #{name} </if>
        </where>
        
    </select>

    <select id="list" resultMap="BaseResultMap" parameterType="java.util.Map">
          select 
            <include refid="Base_Column_List"/>
          from SYS_DEPT
          <where>
              <if test="orgId != null and orgId!= ''"> AND PK_ORG = #{orgId} </if>
          </where>
    </select>

    <!--<select id="list" resultMap="BaseResultMap">
        SELECT * FROM  (  SELECT A.*, ROWNUM RN FROM (
        
			SELECT
			*
			from SYS_DEPT
			<where>
			    <if test="name != null and name!= ''"> AND NAME_DEPT = #{name} </if>
			</where>
        	
        ) A	WHERE ROWNUM &lt;= #{end} ) WHERE RN &gt;= #{begin}  
		        
    </select>-->
    
    
    <insert id="save" >
    	INSERT INTO SYS_DEPT
        (
        PK_DEPT,
        PK_ORG,
        CODE_DEPT,
        NAME_DEPT
        )
        VALUES
        (
        #{ID},
        #{organizationID},
        F_GET_PINYIN(#{departmentName}),
        #{departmentName}
        )
    </insert>
    
    <select id="get" resultType="com.haoze.model.system.department.entity.EmrDepartmentEntity">
        select
        `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept
        where dept_id = #{value}
    </select>

    <select id="listEmrDepartments" resultMap="BaseResultMap">
        SELECT
          SD.PK_DEPT,SD.CODE_DEPT,SD.NAME_DEPT
        FROM SYS_DEPT SD
        INNER JOIN SYS_USER_DEPT SUD ON SD.PK_DEPT = SUD.PK_DEPT
        INNER JOIN SYS_USER SU ON SUD.PK_USER = SU.PK_USER
        <where>
            <if test="userID != null and userID != ''"> AND SU.PK_USER = #{userID} </if>
        </where>
    </select>

    <select id="listEmrDepartmentsByUserId" resultMap="BaseResultMap" parameterType="String">
        select
        sd.*
        from SYS_USER su
        INNER JOIN SYS_USER_DEPT sud on su.PK_USER = sud.PK_USER
        INNER JOIN SYS_DEPT sd on sd.PK_DEPT = sud.PK_DEPT
        <where>
            <if test="_parameter != null"> AND SU.PK_USER = #{_parameter} </if>
        </where>
    </select>

    <select id="countUserDepartments" resultType="int" parameterType="String">
        select count(SD.PK_DEPT)
        FROM SYS_DEPT SD
        INNER JOIN SYS_USER_DEPT SUD ON SD.PK_DEPT = SUD.PK_DEPT
        INNER JOIN SYS_USER SU ON SUD.PK_USER = SU.PK_USER
        <where>
            <if test="userID != null and userID != ''"> AND SU.PK_USER = #{userID} </if>
        </where>
    </select>


    <update id="update" parameterType="com.haoze.model.system.department.entity.EmrDepartmentEntity">
        update sys_dept
        <set>
            <if test="parentId != null">`parent_id` = #{parentId}, </if>
            <if test="name != null">`name` = #{name}, </if>
            <if test="orderNum != null">`order_num` = #{orderNum}, </if>
            <if test="delFlag != null">`del_flag` = #{delFlag}</if>
        </set>
        where dept_id = #{deptId}
    </update>

    <delete id="remove">
        delete from sys_dept where dept_id = #{value}
    </delete>

    <delete id="batchRemove">
        delete from sys_dept where dept_id in
        <foreach item="deptId" collection="array" open="(" separator=","
                 close=")">
            #{deptId}
        </foreach>
    </delete>

    <select id="listParentDept" resultType="long">
        select DISTINCT parent_id from sys_dept
    </select>

    <select id="getDeptUserNumber" resultType="int">
        select count(*) from sys_user where dept_id = #{value}
    </select>
</mapper>