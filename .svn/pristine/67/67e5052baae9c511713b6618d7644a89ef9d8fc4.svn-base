<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.haoze.dao.template.EmrTemplateClassDao" >
  <resultMap id="BaseResultMap" type="com.haoze.model.template.templateclass.entity.EmrTemplateClassEntity" >
    <id column="PK_TMP_CLASS" property="ID" jdbcType="VARCHAR" />
    <result column="PK_ORG" property="pkOrg" jdbcType="VARCHAR" />
    <result column="CODE_CLASS" property="codeClass" jdbcType="VARCHAR" />
    <result column="NAME_CLASS" property="nameClass" jdbcType="VARCHAR" />
    <result column="PY_CODE" property="pyCode" jdbcType="VARCHAR" />
    <result column="WB_CODE" property="wbCode" jdbcType="VARCHAR" />
    <result column="PK_CATALOG" property="pkCatalog" jdbcType="VARCHAR" />
    <result column="STOP_FLAG" property="stopFlag" jdbcType="VARCHAR" />
    <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="DATE" />
    <result column="MODIFIER" property="modifier" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="DATE" />
    <result column="DEL_FLAG" property="delFlag" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    PK_TMP_CLASS, PK_ORG, CODE_CLASS, NAME_CLASS, PY_CODE, WB_CODE, PK_CATALOG, STOP_FLAG, 
    CREATOR, CREATE_TIME, MODIFIER, MODIFY_TIME, DEL_FLAG
  </sql>

  <select id="list" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from EMR_TMP_CLASS
    <where>
      <if test="cataLogId != null and cataLogId!= ''"> AND PK_CATALOG = #{cataLogId} </if>
    </where>
  </select>

  <select id="countByCatalogId" parameterType="String" resultType="int">
    select count(*)
    from EMR_TMP_CLASS
    <where>
      <if test="_parameter != null and _parameter!= ''"> AND PK_CATALOG = #{_parameter} </if>
    </where>
  </select>

  <select id="count" resultType="int">
    select count(et.PK_TEMPLATE)
      from EMR_TEMPLATE et INNER JOIN EMR_TMP_CLASS etc on et.PK_TMP_CLASS=etc.PK_TMP_CLASS
      INNER JOIN SYS_USER su on et.Creator=su.PK_USER
      <where>
        <if test="templateClassId != null and templateClassId!= ''"> AND et.PK_TMP_CLASS = #{templateClassId} </if>
        <if test="range != null and range!= ''"> AND et.RANGE = #{range} </if>
      </where>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from EMR_TMP_CLASS
    where PK_TMP_CLASS = #{pkTmpClass,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from EMR_TMP_CLASS
    where PK_TMP_CLASS = #{pkTmpClass,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.haoze.model.template.templateclass.entity.EmrTemplateClassEntity" >
    insert into EMR_TMP_CLASS (PK_TMP_CLASS, PK_ORG, CODE_CLASS, 
      NAME_CLASS, PY_CODE, WB_CODE, 
      PK_CATALOG, STOP_FLAG, CREATOR, 
      CREATE_TIME, MODIFIER, MODIFY_TIME, 
      DEL_FLAG)
    values (#{pkTmpClass,jdbcType=VARCHAR}, #{pkOrg,jdbcType=VARCHAR}, #{codeClass,jdbcType=VARCHAR}, 
      #{nameClass,jdbcType=VARCHAR}, #{pyCode,jdbcType=VARCHAR}, #{wbCode,jdbcType=VARCHAR}, 
      #{pkCatalog,jdbcType=VARCHAR}, #{stopFlag,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=DATE}, #{modifier,jdbcType=VARCHAR}, #{modifyTime,jdbcType=DATE}, 
      #{delFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.haoze.model.template.templateclass.entity.EmrTemplateClassEntity" >
    insert into EMR_TMP_CLASS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pkTmpClass != null" >
        PK_TMP_CLASS,
      </if>
      <if test="pkOrg != null" >
        PK_ORG,
      </if>
      <if test="codeClass != null" >
        CODE_CLASS,
      </if>
      <if test="nameClass != null" >
        NAME_CLASS,
      </if>
      <if test="pyCode != null" >
        PY_CODE,
      </if>
      <if test="wbCode != null" >
        WB_CODE,
      </if>
      <if test="pkCatalog != null" >
        PK_CATALOG,
      </if>
      <if test="stopFlag != null" >
        STOP_FLAG,
      </if>
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="modifier != null" >
        MODIFIER,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="delFlag != null" >
        DEL_FLAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pkTmpClass != null" >
        #{pkTmpClass,jdbcType=VARCHAR},
      </if>
      <if test="pkOrg != null" >
        #{pkOrg,jdbcType=VARCHAR},
      </if>
      <if test="codeClass != null" >
        #{codeClass,jdbcType=VARCHAR},
      </if>
      <if test="nameClass != null" >
        #{nameClass,jdbcType=VARCHAR},
      </if>
      <if test="pyCode != null" >
        #{pyCode,jdbcType=VARCHAR},
      </if>
      <if test="wbCode != null" >
        #{wbCode,jdbcType=VARCHAR},
      </if>
      <if test="pkCatalog != null" >
        #{pkCatalog,jdbcType=VARCHAR},
      </if>
      <if test="stopFlag != null" >
        #{stopFlag,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=DATE},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.haoze.model.template.templateclass.entity.EmrTemplateClassEntity" >
    update EMR_TMP_CLASS
    <set >
      <if test="pkOrg != null" >
        PK_ORG = #{pkOrg,jdbcType=VARCHAR},
      </if>
      <if test="codeClass != null" >
        CODE_CLASS = #{codeClass,jdbcType=VARCHAR},
      </if>
      <if test="nameClass != null" >
        NAME_CLASS = #{nameClass,jdbcType=VARCHAR},
      </if>
      <if test="pyCode != null" >
        PY_CODE = #{pyCode,jdbcType=VARCHAR},
      </if>
      <if test="wbCode != null" >
        WB_CODE = #{wbCode,jdbcType=VARCHAR},
      </if>
      <if test="pkCatalog != null" >
        PK_CATALOG = #{pkCatalog,jdbcType=VARCHAR},
      </if>
      <if test="stopFlag != null" >
        STOP_FLAG = #{stopFlag,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        CREATOR = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=DATE},
      </if>
      <if test="modifier != null" >
        MODIFIER = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=DATE},
      </if>
      <if test="delFlag != null" >
        DEL_FLAG = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where PK_TMP_CLASS = #{pkTmpClass,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.haoze.model.template.templateclass.entity.EmrTemplateClassEntity" >
    update EMR_TMP_CLASS
    set PK_ORG = #{pkOrg,jdbcType=VARCHAR},
      CODE_CLASS = #{codeClass,jdbcType=VARCHAR},
      NAME_CLASS = #{nameClass,jdbcType=VARCHAR},
      PY_CODE = #{pyCode,jdbcType=VARCHAR},
      WB_CODE = #{wbCode,jdbcType=VARCHAR},
      PK_CATALOG = #{pkCatalog,jdbcType=VARCHAR},
      STOP_FLAG = #{stopFlag,jdbcType=VARCHAR},
      CREATOR = #{creator,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      MODIFIER = #{modifier,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=DATE},
      DEL_FLAG = #{delFlag,jdbcType=CHAR}
    where PK_TMP_CLASS = #{pkTmpClass,jdbcType=VARCHAR}
  </update>

  <select id="listEmrTemplateClass" parameterType="java.util.Map" resultType="com.haoze.model.template.templateclass.po.EmrTemplateClassPO">
      select
        et.PK_TEMPLATE TemplateId,et.NAME_TMP TemplateName,et.RANGE Range,et.CONTENT,su.NAME_USER Creator,et.CREATE_TIME CreateTime
      from EMR_TEMPLATE et INNER JOIN EMR_TMP_CLASS etc on et.PK_TMP_CLASS=etc.PK_TMP_CLASS
      INNER JOIN SYS_USER su on et.Creator=su.PK_USER
      <where>
        <if test="templateClassId != null and templateClassId!= ''"> AND et.PK_TMP_CLASS = #{templateClassId} </if>
        <if test="range != null and range!= ''"> AND et.RANGE = #{range} </if>
      </where>
  </select>
</mapper>